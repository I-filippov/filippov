@model Filippov.Models.IndexViewModel
@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.EntityFramework;
@using Filippov.Models;
@{
    ViewBag.Title = "Управление";
}

<h2>@ViewBag.Title.</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
<div>
    <h4>
       
            @Html.ActionLink("Изменение параметров учетной записи", "AccountSettings", "Account", routeValues: null, htmlAttributes: new { title = "Settings" })
     
    </h4>
    <hr />
    <dl class="dl-horizontal">


        @if (this.User.IsInRole("admin"))
        {

            <dt>ФИО:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.FIO

                        }
                    }
                </b>
            </dd>
            <dt>Номер телефона:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.PhoneNumber

                        }
                    }
                </b>
            </dd>
            <dt>Email:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.Email

                        }
                    }
                </b>
            </dd>
            <dt>Адрес:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.Adres

                        }
                    }
                </b>
            </dd>
            <dt>Должность:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.Job_status

                        }
                    }
                </b>
            </dd>
            <dt>Паспорт:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.Pasport

                        }
                    }
                </b>
            </dd>
            <dt>Филиал:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.Filial

                        }
                    }
                </b>
            </dd>
            <dt>СНИЛС:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.SNILS

                        }
                    }
                </b>
            </dd>
            <dt>ИНН:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.INN

                        }
                    }
                </b>
            </dd>
            <dt>Зарплата:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.Salary

                        }
                    }
                </b>
            </dd>
          

        }
        @if (this.User.IsInRole("employee"))
        {

            <dt>ФИО:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.FIO

                        }
                    }
                </b>
            </dd>
            <dt>Номер телефона:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.PhoneNumber

                        }
                    }
                </b>
            </dd>
            <dt>Email:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.Email

                        }
                    }
                </b>
            </dd>
            <dt>Дата рождения:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.Date_start

                        }
                    }
                </b>
            </dd>
            <dt>Адрес:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.Adres

                        }
                    }
                </b>
            </dd>
            <dt>Должность:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.Job_status

                        }
                    }
                </b>
            </dd>

            <dt>Филиал:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.Filial

                        }
                    }
                </b>
            </dd>

            <dt>Зарплата:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.Salary

                        }
                    }
                </b>
            </dd>
        }
        @if (this.User.IsInRole("custumer"))
        {

            <dt>ФИО:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.FIO

                        }
                    }
                </b>
            </dd>
            <dt>Номер телефона:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.PhoneNumber

                        }
                    }
                </b>
            </dd>
            <dt>Email:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.Email

                        }
                    }
                </b>
            </dd>
            <dt>Адрес:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.Adres

                        }
                    }
                </b>
            </dd>

            <dt>Паспорт:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.Pasport

                        }
                    }
                </b>
            </dd>

            <dt>СНИЛС:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.SNILS

                        }
                    }
                </b>
            </dd>
            <dt>ИНН:</dt>
            <dd>
                <b>
                    @{
                        if (Request.IsAuthenticated)
                        {
                            var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                            var currentUser = manager.FindById(User.Identity.GetUserId());

                            @currentUser.INN

                        }
                    }
                </b>
            </dd>

        }

        <dt>Пароль:</dt>
        <dd>
            [
            @if (Model.HasPassword)
            {
                @Html.ActionLink("Смена пароля", "ChangePassword")
            }
            else
            {
                @Html.ActionLink("Создать", "SetPassword")
            }
            ]
        </dd>
        <dt>Внешние имена входа:</dt>
        <dd>
            @Model.Logins.Count [
            @Html.ActionLink("Управление", "ManageLogins") ]
        </dd>
        @*
        Номера телефонов можно использовать в качестве второго проверочного фактора для системы двухфакторной проверки подлинности.

         В <a href="https://go.microsoft.com/fwlink/?LinkId=403804">этой статье</a>
            можно узнать, как настроить для этого приложения ASP.NET двухфакторную проверку подлинности с использованием SMS.

         Настроив двухфакторную проверку подлинности, раскомментируйте следующий блок
        *@
        @*
        <dt>Номер телефона:</dt>
        <dd>
            @(Model.PhoneNumber ?? "None")
            @if (Model.PhoneNumber != null)
            {
                <br />
                <text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
                using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <text>[<input type="submit" value="Удалить" class="btn-link" />]</text>
                }
            }
            else
            {
                <text>[&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber")
            }
        </dd>
        *@
        <dt>Двухфакторная проверка подлинности:</dt>
        <dd>
            <p>
                Поставщики двухфакторной проверки подлинности не настроены. В <a href="https://go.microsoft.com/fwlink/?LinkId=403804">этой статье</a>
                можно узнать, как настроить двухфакторную проверку подлинности для этого приложения ASP.NET.
            </p>
            @*@if (Model.TwoFactor)
            {
                using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <text>Включено
                    <input type="submit" value="Отключить" class="btn btn-link" />
                    </text>
                }
            }
            else
            {
                using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <text>Отключено
                    <input type="submit" value="Включить" class="btn btn-link" />
                    </text>
                }
            }*@
        </dd>
    </dl>
</div>
